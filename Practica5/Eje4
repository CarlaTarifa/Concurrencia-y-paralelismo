En una clínica existe un médico de guardia que recibe continuamente peticiones de atención de las E enfermeras que trabajan en su piso y de las P personas que llegan a la clínica
ser atendidos.
Cuando una persona necesita que la atiendan espera a lo sumo 5 minutos a que el médico lo haga, si pasado ese tiempo no lo hace, espera 10 minutos y vuelve a requerir la atención 
del médico. Si no es atendida tres veces, se enoja y se retira de la clínica.
Cuando una enfermera requiere la atención del médico, si este no lo atiende inmediatamente le hace una nota y se la deja en el consultorio para que esta resuelva su pedido en el 
momento que pueda (el pedido puede ser que el médico le firme algún papel). Cuando la petición ha sido recibida por el médico o la nota ha sido dejada en el escritorio, continúa 
trabajando y haciendo más peticiones.
El médico atiende los pedidos dándoles prioridad a los enfermos que llegan para ser atendidos. Cuando atiende un pedido, recibe la solicitud y la procesa durante un cierto tiempo. Cuando está libre aprovecha a procesar las notas dejadas por las enfermeras.

Procedure Clinica is:
  Task Medico IS
      Entry PPaciente(s:IN text);
      Entry PEnfermera(m:IN text);
  end clinica;

  Task  Type paciente;
  arrpaciente:array(1..P);
  Task Type enfermera;
  arrEnfermera:array(1..E);

  Task Consultorio IS
    Entry notas(n:IN text);
    Entry siguiente(n:OUT text);
  end consultorio;

  Task Body Enfermera IS
    p,nota:text;
  begin
      Loop
        Select 
           medico.PEnfermera(p);
        else
           nota=GenerarNota();
           consultorio.notas(nota);
        end select;
    end loop;
  end enfermera;

  Task Body Paciente IS
  pedido:text;
  cant:int;
  begin
      cant=0;
      while(cant<3) do
        Select
          medico.PPaciente(pedido);
          cant=3;//para que se vaya
        or delay(5min)
          cant=cant+1 ;
          delay(10min);
        end select;
  end paciente;

  Task Body Paciente IS
    n:text; 
    C:cola;
  begin
    loop
      select
        accept notas(n:IN text) do
          push(c,n);
        end notas;
      or
        when (not empty(c)) => Accept siguiente(n:Out text) do 
                                n=pop(c,n);
                                end siguiente;
      end select;
    end loop;
  end paciente;

  Task Body Medico IS
    nota:text;
  begin
    loop
      select
        accept PPaciente() do 
          //atiendo paciente
        end ppaciente;
      or
        when(PPaciente'.count ==0) => accept PEnfermera() do
                                          //atiendo enfermera
                                        end penfermera;
      else
        consultorio.siguiente(nota); //aca necesito un secretario 
         Accept Pedido(datos:IN text , Result:OUT text) do
                Result=ResolverPedido();
         end pedido;                             
      end loop;
  end empleado;
